library(tidyverse)
library(tidytext)
library(janeaustenr)
library(gutenbergr)
library(tidyr)
library(scales)
library(textdata)
library(zoo)

# Unnest Tokens and remove stop words from dataset1
tidy_dataset1 <- dataset1 %>%
  unnest_tokens(word, text) %>%
  anti_join(stop_words)

# Remove NAs
tidy_dataset1 <- na.omit(tidy_dataset1)

# Count up the words
tidy_dataset1 %>%
  count(word, sort = TRUE)

# Graphing word count - dataset1
tidy_dataset1 %>%
  count(word, sort = TRUE) %>%
  filter(n>100) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word,n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()


# Load sentiment dictionary
NRC_sentiment <- get_sentiments("nrc")

# Do the sentiment analysis
dataset1_sent <- inner_join(tidy_dataset1, NRC_sentiment, by = "word")

# Count the sentiments
dataset1_sent %>%
  count(sentiment, sort = TRUE)

# Graph the sentiment counts
dataset1_sent %>%
  count(sentiment, sort = TRUE) %>%
  filter(n>1) %>%
  mutate(sentiment = reorder(sentiment, n)) %>%
  ggplot(aes(sentiment,n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip()

# Add 'text_name' and linenumber variables.
tidy_dataset1 <- mutate(tidy_dataset1, text_name = "Name of text")

linenumber <- tibble(linenumber = 1:dim(tidy_dataset1)[1])

tidy_dataset1 <- bind_cols(tidy_dataset1,linenumber)

# Looking at the sentiment index by text_name
dataset1_sent_2 <- tidy_dataset1 %>%
  inner_join(get_sentiments("bing")) %>%
  count(text_name, index = linenumber %/% 80, sentiment) %>%
  spread(sentiment, n, fill = 0) %>%
  mutate(sentiment = positive - negative)

# Graph the sentiment index
ggplot(dataset1_sent_2, aes(index, sentiment, fill = text_name)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~text_name, ncol = 1, scales = "free_x")

# Graph the rolling average of the sentiment score across the lines of the text. 
ggplot(dataset1_sent_2, aes(index, sentiment)) + 
  geom_point(position=position_jitter(1,3), pch=21, fill="#FF0000AA") +
  geom_line(aes(y=rollmean(sentiment, 7, na.pad=TRUE))) +
  theme_bw()
